{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\wuzhiqing\\\\Documents\\\\GitHub\\\\INFO30005\\\\info3005_front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\"; // TODO - update this to be your url\n\nvar BASE_URL = \"https://healthnextdoortest.herokuapp.com\";\n\nfunction getCaregivers() {\n  var endpoint = BASE_URL + \"/findCaregiver\"; // TODO\n  // return fetch call that gets author list\n\n  return fetch(endpoint).then(function (res) {\n    console.log(res);\n    return res.json();\n  });\n}\n\nexport function getCaregiver(id) {\n  var endpoint = BASE_URL + \"/findCaregiver/\".concat(id); // TODO\n  // return fetch statement to get an author by the id\n}\nexport function addCaregiver(caregiver) {\n  var id = caregiver.id,\n      first_name = caregiver.first_name,\n      last_name = caregiver.last_name,\n      gender = caregiver.gender,\n      introduction = caregiver.introduction;\n\n  if (!id || !first_name || !last_name) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/findCaregiver/\"; // TODO\n  // return fetch statement to add an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id,\n      first_name,\n      last_name,\n      gender,\n      introduction\n    })\n  });\n}\nexport function updateCaregiver(caregiver) {\n  var id = caregiver.id,\n      first_name = caregiver.first_name,\n      last_name = caregiver.last_name,\n      gender = caregiver.gender,\n      introduction = caregiver.introduction;\n\n  if (!id) {\n    alert(\"must include an id\");\n    return;\n  }\n\n  if (!first_name || !last_name) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n\n  if (!gender) {\n    alert(\"must include gender\");\n    return;\n  }\n\n  if (!introduction) {\n    alert(\"must include an introduction\");\n    return;\n  }\n\n  var endpoint = BASE_URL + \"/findCaregiver/\".concat(id); // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id,\n      first_name,\n      last_name,\n      gender,\n      introduction\n    })\n  });\n}\nexport function deleteCaregiver(id) {\n  var endpoint = BASE_URL + \"/findCaregiver/\".concat(id);\n  return fetch(endpoint, {\n    method: \"DELETE\"\n  }); // return fetch query\n}\nexport function useCaregivers() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      caregivers = _useState4[0],\n      setCaregivers = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    getCaregivers().then(function (caregivers) {\n      setCaregivers(caregivers);\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    caregivers,\n    error\n  };\n}","map":{"version":3,"sources":["C:/Users/wuzhiqing/Documents/GitHub/INFO30005/info3005_front/src/api.js"],"names":["useState","useEffect","BASE_URL","getCaregivers","endpoint","fetch","then","res","console","log","json","getCaregiver","id","addCaregiver","caregiver","first_name","last_name","gender","introduction","alert","method","headers","body","JSON","stringify","updateCaregiver","deleteCaregiver","useCaregivers","loading","setLoading","caregivers","setCaregivers","error","setError","catch","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n// TODO - update this to be your url\r\nconst BASE_URL = \"https://healthnextdoortest.herokuapp.com\";\r\n\r\nfunction getCaregivers() {\r\n  const endpoint = BASE_URL + `/findCaregiver`;\r\n\r\n  // TODO\r\n  // return fetch call that gets author list\r\n  return fetch(endpoint).then(res => {\r\n    console.log(res);\r\n    return res.json();\r\n  });\r\n}\r\n\r\nexport function getCaregiver(id) {\r\n  const endpoint = BASE_URL + `/findCaregiver/${id}`;\r\n\r\n  // TODO\r\n  // return fetch statement to get an author by the id\r\n}\r\n\r\nexport function addCaregiver(caregiver) {\r\n  const { id, first_name, last_name, gender, introduction } = caregiver;\r\n  if (!id || !first_name || !last_name) {\r\n    alert(\"must include all fields\");\r\n    return;\r\n  }\r\n\r\n  const endpoint = BASE_URL + `/findCaregiver/`;\r\n\r\n  // TODO\r\n  // return fetch statement to add an author\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      id,\r\n      first_name,\r\n      last_name,\r\n      gender,\r\n      introduction\r\n    })\r\n  });\r\n}\r\n\r\nexport function updateCaregiver(caregiver) {\r\n  const { id, first_name, last_name, gender, introduction } = caregiver;\r\n  if (!id) {\r\n    alert(\"must include an id\");\r\n    return;\r\n  }\r\n  if (!first_name || !last_name) {\r\n    alert(\"must include a first name or last name to update\");\r\n    return;\r\n  }\r\n  if (!gender){\r\n    alert(\"must include gender\");\r\n    return;\r\n  }\r\n  if (!introduction){\r\n    alert(\"must include an introduction\");\r\n    return;\r\n  }\r\n\r\n  const endpoint = BASE_URL + `/findCaregiver/${id}`;\r\n\r\n  // return fetch query to update an author\r\n  return fetch(endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      id,\r\n      first_name,\r\n      last_name,\r\n      gender,\r\n      introduction\r\n    })\r\n  });\r\n\r\n}\r\n\r\nexport function deleteCaregiver(id) {\r\n  const endpoint = BASE_URL + `/findCaregiver/${id}`;\r\n  return fetch(endpoint, {\r\n    method: \"DELETE\",\r\n  });\r\n  // return fetch query\r\n}\r\n\r\nexport function useCaregivers() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [caregivers, setCaregivers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCaregivers()\r\n      .then(caregivers => {\r\n        setCaregivers(caregivers);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        setError(e);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return {\r\n    loading,\r\n    caregivers,\r\n    error\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}